<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "asn"
				string m_meshFile = "models/assassin/asn.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bUseOnlyRealMeshBones = false
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_sMDLFilename = ""
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Point01"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point01"
					float(3) m_vMinBounds = ( -80.000000, -80.000000, -80.000000 )
					float(3) m_vMaxBounds = ( 80.000000, 80.000000, 80.000000 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point10"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point10"
					float(3) m_vMinBounds = ( -15.703284, -13.347822, 0.238785 )
					float(3) m_vMaxBounds = ( 16.546761, 11.187407, 10.453003 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point11"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point11"
					float(3) m_vMinBounds = ( -21.530041, -12.505139, -10.971291 )
					float(3) m_vMaxBounds = ( 22.335999, 12.862231, 31.793755 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point18"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point18"
					float(3) m_vMinBounds = ( -8.919523, -11.035484, -4.137848 )
					float(3) m_vMaxBounds = ( 9.608492, 13.108398, 20.437592 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point29"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point29"
					float(3) m_vMinBounds = ( -3.259264, -2.989556, -9.161118 )
					float(3) m_vMaxBounds = ( 3.884088, 5.850074, 3.184937 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point30"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point30"
					float(3) m_vMinBounds = ( -2.999552, -4.111419, -11.376251 )
					float(3) m_vMaxBounds = ( 3.648098, 4.186035, 1.014908 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point31"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point31"
					float(3) m_vMinBounds = ( -2.848495, -3.710427, -9.943878 )
					float(3) m_vMaxBounds = ( 3.469320, 3.499630, 0.362442 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point17"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point17"
					float(3) m_vMinBounds = ( -23.289488, -6.877214, -10.706558 )
					float(3) m_vMaxBounds = ( 1.733194, 11.356546, 7.969330 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point03"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point03"
					float(3) m_vMinBounds = ( -11.360861, -12.892139, -31.031544 )
					float(3) m_vMaxBounds = ( 13.940437, 17.735943, 0.240585 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point09"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point09"
					float(3) m_vMinBounds = ( -13.817886, -12.908136, -31.027065 )
					float(3) m_vMaxBounds = ( 11.475870, 17.726681, 0.254074 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new0"
					float(3) m_vMinBounds = ( -3.028395, -2.655684, -13.526192 )
					float(3) m_vMaxBounds = ( 2.821646, 3.371609, 0.352661 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point19"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point19"
					float(3) m_vMinBounds = ( -1.234509, -2.526132, -7.859375 )
					float(3) m_vMaxBounds = ( 1.463750, 2.920193, 0.395462 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point23"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point23"
					float(3) m_vMinBounds = ( -1.597337, -2.567332, -7.884277 )
					float(3) m_vMaxBounds = ( 1.113452, 2.856997, 0.363602 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point12"
					float(3) m_vMinBounds = ( -1.204575, -6.114828, -10.743103 )
					float(3) m_vMaxBounds = ( 24.158768, 11.989822, 8.081177 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point16"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point16"
					float(3) m_vMinBounds = ( -32.682510, -8.184742, -7.592285 )
					float(3) m_vMaxBounds = ( 7.533729, 27.060284, 11.410400 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point02"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point02"
					float(3) m_vMinBounds = ( -14.841732, -16.590813, -44.484840 )
					float(3) m_vMaxBounds = ( 16.742390, 23.858650, -0.083279 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point08"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point08"
					float(3) m_vMinBounds = ( -17.286200, -16.558060, -44.395161 )
					float(3) m_vMaxBounds = ( 14.293015, 23.882805, -0.002937 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new1"
					float(3) m_vMinBounds = ( -2.719611, -2.773720, -15.541733 )
					float(3) m_vMaxBounds = ( 2.510647, 2.364532, 0.362755 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point20"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point20"
					float(3) m_vMinBounds = ( -1.393095, -2.115804, -8.616425 )
					float(3) m_vMaxBounds = ( 1.271556, 2.178234, 0.368073 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point24"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point24"
					float(3) m_vMinBounds = ( -1.414923, -2.158508, -8.642517 )
					float(3) m_vMaxBounds = ( 1.264612, 2.112814, 0.341965 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point13"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point13"
					float(3) m_vMinBounds = ( -6.026242, -6.406212, -6.932571 )
					float(3) m_vMaxBounds = ( 32.284374, 28.842110, 12.237869 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point15"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point15"
					float(3) m_vMinBounds = ( -12.182343, -6.893393, -3.735291 )
					float(3) m_vMaxBounds = ( 0.236633, 2.631193, 5.033539 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point04"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point04"
					float(3) m_vMinBounds = ( -4.461695, -12.811704, -10.414069 )
					float(3) m_vMaxBounds = ( 5.230903, 5.659535, -0.038512 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point07"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point07"
					float(3) m_vMinBounds = ( -4.956120, -12.829499, -10.420724 )
					float(3) m_vMaxBounds = ( 4.700852, 5.678269, -0.058617 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new6"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new6"
					float(3) m_vMinBounds = ( -7.494326, -5.430370, -15.289413 )
					float(3) m_vMaxBounds = ( 9.565315, 9.431243, -0.177605 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new7"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new7"
					float(3) m_vMinBounds = ( -8.284547, -5.508519, -15.137329 )
					float(3) m_vMaxBounds = ( 7.794518, 9.219797, 0.009041 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new12"
					float(3) m_vMinBounds = ( -10.626373, -8.198684, -14.022499 )
					float(3) m_vMaxBounds = ( 9.690334, 6.863506, 0.162399 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new13"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new13"
					float(3) m_vMinBounds = ( -9.494046, -8.415845, -13.792953 )
					float(3) m_vMaxBounds = ( 10.712821, 6.826264, 0.362846 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new2"
					float(3) m_vMinBounds = ( -1.897420, -2.609476, -21.028526 )
					float(3) m_vMaxBounds = ( 2.010717, 1.549938, 0.199814 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new4"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new4"
					float(3) m_vMinBounds = ( -1.607171, -2.422500, -9.137283 )
					float(3) m_vMaxBounds = ( 1.082016, 2.000671, 0.107346 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new5"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new5"
					float(3) m_vMinBounds = ( -1.389875, -2.465000, -9.160904 )
					float(3) m_vMaxBounds = ( 1.323853, 1.932494, 0.083755 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point14"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point14"
					float(3) m_vMinBounds = ( -0.247917, -7.013569, -2.820847 )
					float(3) m_vMaxBounds = ( 18.068932, 5.000259, 5.562363 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point44"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point44"
					float(3) m_vMinBounds = ( -10.199043, -159.937149, -0.012650 )
					float(3) m_vMaxBounds = ( 4.733696, 48.452896, 3.214584 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point05"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point05"
					float(3) m_vMinBounds = ( -4.862432, -6.485944, -3.762510 )
					float(3) m_vMaxBounds = ( 5.170195, 1.520616, 1.957408 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point06"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point06"
					float(3) m_vMinBounds = ( -4.818922, -6.718833, -3.779447 )
					float(3) m_vMaxBounds = ( 5.256293, 1.227931, 1.943470 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new9"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new9"
					float(3) m_vMinBounds = ( -9.196746, -6.943801, -11.864594 )
					float(3) m_vMaxBounds = ( 9.006371, 8.719258, 0.082047 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new8"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new8"
					float(3) m_vMinBounds = ( -9.667463, -7.049741, -11.643700 )
					float(3) m_vMaxBounds = ( 8.734463, 8.478137, 0.327370 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new10"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new10"
					float(3) m_vMinBounds = ( -12.751868, -10.929199, -14.806770 )
					float(3) m_vMaxBounds = ( 9.299726, 7.071510, 0.404716 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new11"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new11"
					float(3) m_vMinBounds = ( -10.064331, -11.206034, -14.849495 )
					float(3) m_vMaxBounds = ( 11.857430, 6.966012, 0.676903 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "m3bone_root"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "m3bone_root"
					float(3) m_vMinBounds = ( -2.000000, -2.000000, -2.000000 )
					float(3) m_vMaxBounds = ( 2.000000, 2.000000, 2.000000 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_origin"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "m3bone_root"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Point01"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack2"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Point14"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_sword"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Point44"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "asn_idle"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 1
			int m_nEndframe = 284
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_move"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 579
			int m_nEndframe = 596
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_attack"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 390
			int m_nEndframe = 428
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_attack_two"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 430
			int m_nEndframe = 470
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_attack_three"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 472
			int m_nEndframe = 509
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK_EVENT"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_windblade"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 641
			int m_nEndframe = 679
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_death"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 985
			int m_nEndframe = 1087
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_tg_cast"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 359
			int m_nEndframe = 385
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_tg_slash"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 828
			int m_nEndframe = 890
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_4"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "asn_tg"
			string m_Filepath = "models/assassin/asn1.FBX"
			int m_nStartframe = 797
			int m_nEndframe = 890
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_6"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "681.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "682.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "685.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "686.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "687.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "688.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "689.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6810.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6811.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6813.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6814.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6815.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6816.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6817.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6818.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "683.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "684.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6812.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6819.vmat"
			string m_sReplaceMaterial = "materials/assassin/assassin_tex.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "6820.vmat"
			string m_sReplaceMaterial = "materials/models/development/invisibletexture.vmat"
		}
	]
}