<root>
	<script>
		GameUI.CustomUIConfig().multiteam_top_scoreboard =
		{
			reorder_team_scores: true,
			LeftInjectXMLFile: "file://{resources}/layout/custom_game/fateanother_scoreboard_left.xml"
		};
	    // Uncomment any of the following lines in order to disable that portion of the default UI

	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY, false );      //Time of day (clock).
	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );     //Heroes and team score at the top of the HUD.
	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD, true );      //Lefthand flyout scoreboard.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_PANEL, false );     //Hero actions UI.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_MINIMAP, false );     //Minimap.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PANEL, false );      //Entire Inventory UI
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_SHOP, false );     //Shop portion of the Inventory.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_ITEMS, false );      //Player items.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY, false );     //Quickbuy.
	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_COURIER, false );      //Courier controls.
	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PROTECT, false );      //Glyph.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_GOLD, false );     //Gold display.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS, false );      //Suggested items shop panel.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS, false );     //Hero selection Radiant and Dire player lists.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME, false );     //Hero selection game mode name display.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK, false );     //Hero selection clock.
	    //GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS, false );     //Top-left menu buttons in the HUD.
	    GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );      //Endgame scoreboard. 
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS, false );
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME, false );
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK, false );

		// Talent
		var UIRoot = $.GetContextPanel().GetParent().GetParent()

		/*var hudRoot;
		var panel;
		for( panel = $.GetContextPanel(); panel != null; panel = panel.GetParent())
		{
			hudRoot = panel;
		}
		if (hudRoot != null)
		{
			var statBranch = hudRoot.FindChildTraverse("StatBranch");
			if (statBranch != null)
			{
				statBranch.style.visibility = "collapse";
			}

			var statLevel = hudRoot.FindChildTraverse("level_stats_frame");
			if (statLevel != null)
			{
				statLevel.style.visibility = "collapse";
			}
		}*/

		
		var talentButton = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("center_with_stats").FindChildTraverse("center_block").FindChildTraverse("AbilitiesAndStatBranch").FindChildTraverse("StatBranch");
		//talentButton.style.visibility = "collapse";
		
		var talentButtonOverlay = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("center_with_stats").FindChildTraverse("center_block").FindChildTraverse("level_stats_frame");
		talentButtonOverlay.style.visibility = "collapse";
		
		var talentStatFrame = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("StatBranchDrawer");
		talentStatFrame.style.visibility = "collapse";
		
		var glyphUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("minimap_container").FindChildTraverse("GlyphScanContainer");
		glyphUI.style.visibility = "collapse";
		
		
        // startegy
        var strategyUI = UIRoot.FindChildTraverse("MainContents").FindChildTraverse("ScreenContainer").FindChildTraverse("StrategyScreen").FindChildTraverse("RightContainer");
        strategyUI.style.visibility = "collapse";

        // role filter
        var roleFilterUI = UIRoot.FindChildTraverse("MainContents").FindChildTraverse("ScreenContainer").FindChildTraverse("HeroPickScreen").FindChildTraverse("HeroPickScreenContents").FindChildTraverse("HeroPickLeftColumn").FindChildTraverse("HeroFilters").FindChildTraverse("MainFilters");
        roleFilterUI.style.visibility = "collapse";

        // DOTA minimap
        var minimapUI = UIRoot.FindChildTraverse("PreGame").FindChildTraverse("BottomPanelsContainer").FindChildTraverse("PreMinimapContainer");
        minimapUI.style.visibility = "collapse";

        // Team Composition
        var teamCompUI = UIRoot.FindChildTraverse("PreGame").FindChildTraverse("BottomPanelsContainer").FindChildTraverse("BottomPanels").FindChildTraverse("GridTeamComp");
        teamCompUI.style.visibility = "collapse";

        // Current Active Quest
        var activeQuestUI = UIRoot.FindChildTraverse("PreGame").FindChildTraverse("BottomPanelsContainer").FindChildTraverse("BottomPanels").FindChildTraverse("BattlePassContainer");
        activeQuestUI.style.visibility = "collapse";

        // Available Item Container
        var itemContainerUI = UIRoot.FindChildTraverse("PreGame").FindChildTraverse("BottomPanelsContainer").FindChildTraverse("AvailableItemsContainer");
        itemContainerUI.style.visibility = "collapse";

        // KDA
        var KDAUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("quickstats").FindChildTraverse("QuickStatsContainer");
        UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("quickstats").style.width = "400px";
        UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("quickstats").style.marginTop = "0px";
	    //KDAUI.style.visibility = "collapse";
        KDAUI.style.marginTop = "4px";
        KDAUI.style.marginLeft = "190px";
        KDAUI.style.backgroundColor = "#00000000"

        // backpack
        var backpackUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("center_with_stats").FindChildTraverse("center_block").FindChildTraverse("inventory").FindChildTraverse("inventory_items").FindChildTraverse("InventoryContainer").FindChildTraverse("inventory_backpack_list");
        backpackUI.style.visibility = "collapse";

        // Glyph, Scan
        var glyphScanUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("GlyphScanContainer");
		//glyphScanUI.style.visibility = "collapse";

        // Common item search
        var commonItemSearchUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("shop").FindChildTraverse("Main").FindChildTraverse("HeightLimiter").FindChildTraverse("SearchContainer");
        commonItemSearchUI.style.visibility = "collapse";

        // Combat events(kill etc)
        var combatEventUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("combat_events");
        combatEventUI.style.visibility = "collapse";

        // Quickbuy
        var quickbuyUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("lower_hud").FindChildTraverse("shop_launcher_block").FindChildTraverse("quickbuy").FindChildTraverse("QuickBuyRows");

        // Team Container
        var teamScoreUI = UIRoot.FindChildTraverse("HUDElements").FindChildTraverse("scoreboard");

        teamScoreUI.style.height = "800px";
        teamScoreUI.style.marginLeft = 	"60%";
        teamScoreUI.FindChildTraverse("Background").style.height = "800px";
        //teamScoreUI.FindChildTraverse("LocalTeamInventory").style.visibility = "collapse";

        var radiantScoreUI = teamScoreUI.FindChildTraverse("Background").FindChildTraverse("RadiantTeamContainer");
        var direScoreUI = teamScoreUI.FindChildTraverse("Background").FindChildTraverse("DireTeamContainer");
        var direScoreHeaderUI = teamScoreUI.FindChildTraverse("Background").FindChildTraverse("DireHeader");
        direScoreHeaderUI.style.marginTop = "-18px";
        direScoreHeaderUI.style.marginBottom = "-4px";

        radiantScoreUI.style.height = "330px";
        direScoreUI.style.height = "330px";

        for (var i=0; i<radiantScoreUI.GetChildCount(); i++)
        {
        	radiantScoreUI.GetChild(i).style.height = "15%";
        }
        for (var i=0; i<direScoreUI.GetChildCount(); i++)
        {
        	direScoreUI.GetChild(i).style.height = "15%";
        }

		GameUI.CustomUIConfig().team_colors = {}
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "#3dd296;"; // { 61, 210, 150 }	--		Teal
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_BADGUYS ] = "#F3C909;"; // { 243, 201, 9 }	--		Yellow
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_1] = "#c54da8;"; // { 197, 77, 168 }	--		Pink
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_2] = "#FF6C00;"; // { 255, 108, 0 }	--		Orange
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_3] = "#8c2af4;"; // { 140, 42, 244 }	--		Purple
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_4] = "#3455FF;"; // { 52, 85, 255 }	--		Blue
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_5] = "#c7e40d;"; // { 199, 228, 13 }	--		Olive
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_6] = "#815336;"; // { 129, 83, 54 }	--		Brown
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_7] = "#1bc0d8;"; // { 27, 192, 216 }	--		Light Blue
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_8] = "#65d413;"; // { 101, 212, 19 }	--	

		var hud = $.GetContextPanel().GetParent().GetParent();
		GameUI.CustomUIConfig().hud = hud;
	</script>

	
	<scripts>
		<include src="file://{resources}/scripts/custom_game/fateanother_shop.js" />
	</scripts>
	
	<Panel>
	    <!-- CustomUIElements go here.  They are not provided currently as valve's parser reads commented lines and attempts to link them in.-->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hud_base.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_masterbar.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_customization.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_timer_layout.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_portrait.xml" />
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/barebones_attachments.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_buff_bar.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_combatevent.xml" />
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_spellbook.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/statcollection.xml" />
		<CustomUIElement type="GameSetup" layoutfile="file://{resources}/layout/custom_game/team_select.xml" />
		<CustomUIElement type="FlyoutScoreboard" layoutfile="file://{resources}/layout/custom_game/multiteam_flyout_scoreboard.xml" />
		<CustomUIElement type="HudTopBar" layoutfile="file://{resources}/layout/custom_game/multiteam_top_scoreboard.xml" />
		<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/multiteam_end_screen.xml" />
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/inventory.xml" /> -->
		<!-- <CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/fateanother_game_info.xml" /> -->
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
        <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_hero_selection.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/fateanother_options.xml" />
	</Panel>
</root>

